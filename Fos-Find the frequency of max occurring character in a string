int frequency_max_character(int num_of_arguments, char** arguments)
{
	
	//calculate the frequency of max ocurring character

	int max_count=0;
	int count=1;
	int len=strlen(arguments[1]); //get the length of the string 
	char temp;


		for (int i = 0; i < len-1; i++) \\ sort the string alphaptical
		{
			for (int j = i+1; j < len; j++)
			{
				if ((arguments[1])[i] > (arguments[1])[j])
				{
						temp = (arguments[1])[i];
						(arguments[1])[i] = (arguments[1])[j];
						(arguments[1])[j] = temp;
				}
			}
		}



	for (int i = 1; i <= len; i++) // compare each char with the previous one in the string
	    {
	        if ((i == len) || ((arguments[1])[i] != (arguments[1])[i-1]))
	        {
	            if (max_count < count)
	            {
	                max_count = count;

	            }
	            count = 1;
	        }
	        else
	        {
	            count++;
	        }
	    }



	return max_count;
}
